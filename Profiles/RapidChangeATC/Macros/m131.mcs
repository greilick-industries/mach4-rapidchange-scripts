function m131()
  --Get current tool, if we don't have a tool then exit
  --TODO: Send a message?
  local currentTool = rcATC.GetCurrentTool()
  if currentTool == 0 then
    return
  end

  -- Get units and zSafeClearance, used in noToolChange and in touch off routine
  local userUnits = rcSettings.GetValue(k.UNITS)
  local zSafeClearance = rcSettings.GetValue(k.Z_SAFE_CLEARANCE)

  --Create setup, teardown, and dust cover controls if not called from m6
  local function setup_noToolChange()
    --Record units
    rcATC.RecordUnits()

    --Set modal states
    rcATC.SpinStop()
    rcATC.CoolantStop()
    rcATC.CancelTLO()
    rcATC.SetUnits(userUnits)

    --Rise to safe clearance because we could be anywhere
    rcATC.RapidToMachCoord_Z(zSafeClearance)
  end

  local function teardown_noToolChange()
    rcATC.RestoreUnits()
  end

  local function openCover_noToolChange()
    local openMCode = rcSettings.GetValue(k.COVER_OPEN_M_CODE)
    rcATC.ExecuteMCode(openMCode)
  end

  local function closeCover_noToolChange()
    local closeMCode = rcSettings.GetValue(k.COVER_CLOSE_M_CODE)
    rcATC.ExecuteMCode(closeMCode)
  end

  local function doNothing() end

  local setup = doNothing
  local teardown = doNothing
  local openCover = doNothing
  local closeCover = doNothing
  
  -- If not called from m6, assign the noToolChange functions
  local toolChangeState = rcATC.GetToolChangeState()

  if toolChangeState == k.INACTIVE then
    setup = setup_noToolChange
    teardown = teardown_noToolChange

    local coverEnabled = rcSettings.GetValue(k.COVER_ENABLED)
    if coverEnabled == k.ENABLED then
      openCover = openCover_noToolChange
      closeCover = closeCover_noToolChange
    end
  end

  -- Calculate max distance after seek retreat
  local function calculatePostRetreatMaxDistance(retreatDistance)
    local multipler = 1
    if userUnits == k.INCHES then
      multipler = 0.03937
    end

    return retreatDistance + (1 * multipler)
  end

  -- Handle no strike
  local function handleStrikeCheck(didStrike)
    if didStrike == k.FALSE then
      rcATC.RapidToMachCoord_Z(zSafeClearance)
      closeCover()
      teardown()

      wx.wxMessageBox("Probe was not triggered.\nThis process has been terminated.\nIf you are running a program you should stop it now.", "Probe Failure")
      error("Probe failure")
    end
  end

  -- Touch off settings
  local xSetter = rcSettings.GetValue(k.X_TOOL_SETTER)
  local ySetter = rcSettings.GetValue(k.Y_TOOL_SETTER)
  local zSeekStart = rcSettings.GetValue(k.Z_SEEK_START)
  local maxDistance = rcSettings.GetValue(k.SEEK_MAX_DISTANCE)
  local seekRetreat = rcSettings.GetValue(k.SEEK_RETREAT)
  local seekFeed = rcSettings.GetValue(k.SEEK_FEED_RATE)
  local setFeed = rcSettings.GetValue(k.SET_FEED_RATE)
  local didStrike
  -- Perform touch off routine
  setup()
  openCover()

  rcATC.RapidToMachCoords_XY_Z(xSetter, ySetter, zSeekStart)
  
  didStrike = rcATC.ProbeDown(maxDistance, seekFeed)
  handleStrikeCheck(didStrike)
  
  rcATC.RapidIncremental_Z(seekRetreat)

  --Adjust max distance for "set" function
  maxDistance = calculatePostRetreatMaxDistance(seekRetreat)

  didStrike = rcATC.ProbeDown(maxDistance, setFeed)
  handleStrikeCheck(didStrike)

  rcATC.RapidToMachCoord_Z(zSafeClearance)
  rcATC.SetTLO(currentTool)
  rcATC.ActivateTLO(currentTool)

  closeCover()
  teardown()
end

if (mc.mcInEditor() == 1) then
	local inst = mc.mcGetInstance()
	local profile = mc.mcProfileGetName(inst)
	dofile ("Profiles\\" .. profile .. "\\Macros\\load_rapidChangeATC.mcs")
	m131()
end