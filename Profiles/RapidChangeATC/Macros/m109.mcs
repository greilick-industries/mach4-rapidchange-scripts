function m109()
  local inst = mc.mcGetInstance()
  --If the dust cover is disabled, nothing to do.
  -- local enabled = rcSettings.GetValue(k.COVER_ENABLED)
  -- if enabled ~= k.ENABLED then
  --   return
  -- end

  package.path = wx.wxGetCwd() .. "\\Modules\\RapidChangeATC\\?.lua;"
  if (package.loaded.ATC_Config == nil) then
    config = require "ATC_Config"
  end

  if config.DustCoverMode == 1 then
    local initAbsMode = math.tointeger(mc.mcCntlGetPoundVar(inst, 4003))
    local initUnits = math.tointeger(mc.mcCntlGetPoundVar(inst, 4006))
    local gCode = ""
    gCode = gCode .. string.format("g53 g0 g90 g%i %s%.3f\n", config.Units, config.DustCoverAxis, config.DustCoverClosedPos)
    gCode = gCode .. string.format("g%i g%i\n", initAbsMode, initUnits)
    mc.mcCntlGcodeExecuteWait(inst, gCode)
    return
  end
  
  if config.DustCoverMode == 2 then
    local signal = mc[string.format("OSIG_OUTPUT%i", config.DustCoverOutput)]
    local handle = mc.mcSignalGetHandle(inst, signal)
    local state = mc.mcSignalGetState(handle)

    if state == 1 then
      mc.mcSignalSetState(handle, 0)
      mc.mcCntlGcodeExecuteWait(inst, string.format("g4 p%.2f\n", config.DustCoverWait))
    end

    return
  end

  mc.mcCntlSetLastError(inst, "Dust Cover Disabled")
end

if (mc.mcInEditor() == 1) then
	dofile ("load_rapidChangeATC.mcs")
	m109()
end